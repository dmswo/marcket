spring:
  h2:
    console:
      enabled: true
      path: /h2~console

  datasource:
    url: jdbc:h2:mem:marcket
    username: sa
    password:
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: create # 어플리케이션을 시작할 때 데이터베이스를 초기화하고 다시 테이블 생성
    properties:
      hibernate:
        format_sql: true # 실행되는 query를 보여줌
        default_batch_fetch_size: 100
    show-sql: true

  data:
    web:
      pageable:
        one-indexed-parameters: true
        default-page-size: 10

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
    messages:
      basename: messages

  redis:
    host: 127.0.0.1
    port: 6379

  config:
    import: 'aws-parameterstore:'

aws:
  paramstore:
    enabled: true
    prefix: /marcket
    profile-separator: _
    name: parameter

jwt:
  secret: ${secret}

management:
  endpoints:
    web:
      exposure:
        include: health

---
spring:
  config:
    activate:
      on-profile: was1
  datasource:
    url: ${db.url}
    username: ${db.username}
    password: ${db.password}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update

server:
  port: 8090

jwt:
  secret: ${secret}

---
spring:
  config:
    activate:
      on-profile: was2
  datasource:
    url: ${db.url}
    username: ${db.username}
    password: ${db.password}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update

server:
  port: 8091

jwt:
  secret: ${secret}